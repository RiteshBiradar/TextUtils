{"version":3,"sources":["components/AboutUs.js","components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["AboutUs","props","myStyle","color","mode","backgroundColor","React","createElement","className","style","id","type","data-bs-toggle","data-bs-target","aria-expanded","aria-controls","data-bs-parent","Navbar","concat","Link","to","title","aria-label","aria-current","role","onClick","toggleMode","htmlFor","TextForm","text","setText","useState","Fragment","heading","rows","value","onChange","event","console","log","target","handleUpClick","newText","toUpperCase","document","getElementById","showAlert","handleLowClick","toLowerCase","handleRevClick","i","length","charAt","handleCopy","select","navigator","clipboard","writeText","trim","split","Alert","height","alert","word","newWord","slice","capitalize","msg","App","setMode","setAlert","message","setTimeout","Router","body","Routes","Route","exact","path","element","reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode"],"mappings":"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","file":"static/js/main.4169b683.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function AboutUs(props) {\r\n\r\n    let myStyle = {\r\n        color:props.mode==='dark'?'white':'#00122a',\r\n        backgroundColor:props.mode==='dark'?'#00122a':'white',\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\" style={myStyle}>\r\n            <div className=\"accordion\" id=\"accordionExample\" >\r\n                <div className=\"accordion-item\">\r\n                    <h2 className=\"accordion-header\">\r\n                        <button className=\"accordion-button\" type=\"button\" style={myStyle} data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n                            <strong>Free to Use</strong>\r\n                        </button>\r\n                    </h2>\r\n                    <div id=\"collapseOne\" className=\"accordion-collapse collapse show\" data-bs-parent=\"#accordionExample\">\r\n                        <div className=\"accordion-body\" style={myStyle}>\r\n                            TextUtil is completely free to use for all users. There are no hidden fees or subscriptions required.Making TextUtil free to use encourages educational institutions, students, and lifelong learners to utilize the app as a learning tool. Students can explore different text manipulation techniques, experiment with various features, and enhance their skills without incurring any expenses.\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"accordion-item\">\r\n                    <h2 className=\"accordion-header\">\r\n                        <button className=\"accordion-button collapsed\" style={myStyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\">\r\n                            <strong>Powerful Tools</strong>\r\n                        </button>\r\n                    </h2>\r\n                    <div id=\"collapseTwo\" className=\"accordion-collapse collapse\" data-bs-parent=\"#accordionExample\">\r\n                        <div className=\"accordion-body\" style={myStyle}>\r\n                            TextUtil offers a wide range of powerful text manipulation tools to help you with your tasks, including text formatting, conversion, and analysis.\r\n                            <ul>\r\n                                <li>Case conversion (e.g., convert text to uppercase, lowercase)</li>\r\n                                <li>Text analysis (e.g., word count, character count)</li>\r\n                                <li>Text transformation (e.g., remove whitespace , reverse)</li>\r\n                                <li>Text Copy</li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"accordion-item\">\r\n                    <h2 className=\"accordion-header\">\r\n                        <button className=\"accordion-button collapsed\" style={myStyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\r\n                            <strong>Easy to Us</strong>\r\n                        </button>\r\n                    </h2>\r\n                    <div id=\"collapseThree\" className=\"accordion-collapse collapse\" data-bs-parent=\"#accordionExample\">\r\n                        <div className=\"accordion-body\" style={myStyle}>\r\n                        TextUtil features a simple and clean user interface that minimizes clutter and distractions. Upon opening the app, users are greeted with a straightforward layout that makes it easy to locate and use the desired features.TextUtil prioritizes user experience by focusing on simplicity, clarity, and ease of use. By removing unnecessary complexity and providing intuitive features and navigation, TextUtil aims to empower users to accomplish their text manipulation tasks efficiently and effortlessly.\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n      <div className=\"container-fluid\">\r\n        <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link>\r\n        <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link\" aria-current=\"page\" to=\"/\">Home</Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link\" aria-current=\"page\" to=\"/aboutus\">AboutUs</Link>\r\n            </li>\r\n          </ul>\r\n          <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n            <input className=\"form-check-input\" type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\" onClick={props.toggleMode}/>\r\n            <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable {props.mode==='light'?'dark':'light'} mode</label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\n","import React,{useState} from 'react'\r\n\r\nexport default function TextForm(props) {\r\n\r\n    const handleUpClick = () =>{\r\n        console.log(\"Uppercase button was clicked\")\r\n        let newText = text.toUpperCase();\r\n        setText(newText)\r\n        if(document.getElementById('myBox').value===\"\"){\r\n            props.showAlert(\"Please enter some text\",\"warning\")\r\n        }\r\n        else{\r\n        props.showAlert(\"Converted to UpperCase\",\"success\")\r\n        }\r\n    }\r\n\r\n    const handleLowClick = () =>{\r\n        console.log(\"Lowercase button was clicked\")\r\n        let newText = text.toLowerCase();\r\n        setText(newText)\r\n        if(document.getElementById('myBox').value===\"\"){\r\n            props.showAlert(\"Please enter some text\",\"warning\")\r\n        }\r\n        else{\r\n        props.showAlert(\"Converted to LowerCase\",\"success\")\r\n        }\r\n    }\r\n\r\n    const handleRevClick = () =>{\r\n        console.log(\"Lowercase button was clicked\")\r\n        let newText = '';\r\n        for(var i =text.length;i>=0;i--)\r\n        newText = newText+=text.charAt(i)\r\n        setText(newText)\r\n        if(document.getElementById('myBox').value===\"\"){\r\n            props.showAlert(\"Please enter some text\",\"warning\")\r\n        }\r\n        else{\r\n            props.showAlert(\"The text has been reversed\",\"success\")\r\n        }\r\n        \r\n    }\r\n\r\n    // Navigator = Browser , ClipBoard = Provides an interface to interact with system clipboard\r\n    const handleCopy= () =>{\r\n        var text = document.getElementById(\"myBox\");;\r\n        text.select();\r\n        navigator.clipboard.writeText(text.value)\r\n        if(document.getElementById('myBox').value===\"\"){\r\n            props.showAlert(\"Please enter some text\",\"warning\")\r\n        }\r\n        else{\r\n            props.showAlert(\"Copied to clipboard!\",\"success\")\r\n        }\r\n        \r\n    }\r\n\r\n\r\n    const handleChange = (event) =>{\r\n    console.log(\"Change has occured in the text box\");\r\n    setText(event.target.value) //It will allow us to add new text to the already existing text in the box\r\n  }\r\n  //HandleChange imp. raheta bcz It will allow us to edit it\r\n\r\n    const [text,setText] = useState(\"\");\r\n    return (\r\n    <>\r\n    <div>\r\n    <h1>{props.heading}</h1>\r\n    <div className=\"mb-3\">\r\n    <textarea className=\"form-control\" id=\"myBox\" rows=\"8\" value={text}  style ={{backgroundColor:props.mode==='dark'?'#00122a':'white',color:props.mode==='dark'?'white':'black'}} onChange={handleChange}></textarea>\r\n    <button className=\"btn btn-primary my-3 mx-2\" onClick={handleUpClick}> Convert to UpperCase</button>\r\n    <button className=\"btn btn-primary my-3 mx-2\" onClick={handleLowClick}> Convert to LowerCase</button>\r\n    <button className=\"btn btn-primary my-3 mx-2\" onClick={handleRevClick}> Convert to Reverse</button>\r\n    <button className=\"btn btn-primary my-3 mx-2\" onClick={handleCopy}> Copy Text</button>\r\n    </div>\r\n    </div>\r\n    <div className=\"container my-3\">\r\n        <h1>Your text summary :</h1>\r\n        <p>{ text===\"\" ?0 :text.trim().split(/\\s+/).length} words, {text.length} characters</p>\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n\r\n    const capitalize = (word)=>{\r\n        const newWord = word.toLowerCase();\r\n        return newWord.charAt(0).toUpperCase() + newWord.slice(1);\r\n    }\r\n\r\n    return (\r\n    <div style={{height:'50px'}}>\r\n    {props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\" >\r\n    <strong>{capitalize(props.alert.type)} :</strong>{props.alert.msg}\r\n    </div>}\r\n    </div>\r\n    )\r\n}\r\n","import { useState } from 'react';\nimport  './App.css';\nimport AboutUs from './components/AboutUs';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport Alert from './components/Alert';\nimport {\n  BrowserRouter as Router,\n  Routes,\n  Route\n} from \"react-router-dom\" ;\nimport React from 'react';\n \n\n\nfunction App() {\n  const[mode,setMode] = useState('light')\n\n  let toggleMode = () =>{\n    if(mode==='light'){\n      setMode('dark')\n      document.body.style.backgroundColor='#00122a';\n      document.body.style.color='white';\n      showAlert(\"Dark Mode has been enabled\",\"success\")\n    }\n    else{\n      setMode('light')\n      document.body.style.backgroundColor='white';\n      document.body.style.color='black'\n      showAlert(\"Light Mode has been enabled\",\"success\")\n    }\n  }\n\n  const [alert,setAlert] = useState(null);\n\n  const showAlert = (message,type) =>{\n    setAlert({\n    msg: message,\n    type: type,\n    })\n\n    setTimeout(() => {\n      setAlert(null)\n    }, 1200);\n  }\n\n  return(\n    <>\n    <Router>\n    <Navbar title =\"TextUtils\" mode={mode} toggleMode = {toggleMode}/>\n    <Alert alert={alert}/>\n    <div className=\"container my-5\">\n    <div className=\"container\">\n          <Routes>\n            <Route exact path=\"/aboutus\" element={<AboutUs mode={mode}/>}>\n            </Route>\n            <Route exact path=\"/\" element={<TextForm heading=\"Enter the text below to analyze :\"  mode={mode} showAlert={showAlert} />}>\n            </Route>\n          </Routes>\n        </div>\n    </div>\n    </Router>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}